DBMS :-
-----
 organized collection of data
 byte -> bit -> kb.... tb.... -> files -> data -> database : (manage) DBMS

Components :-
---------- 
 -> Hardware
 -> Software
 -> End Users
 -> Data
 -> Data Query Language

Single tier architecture :-
-------------------------
 User --> Server (direct Database)

Two Tier architecture :- 
---------------------
 User --> Application Layer --> server (Insta , FB)
-
Three Tier architecture :-
-----------------------
 User --> Application Layer --+ (Password - Encrypted)
                              |
         Admin ---------------+--> Presentation Layer - server

Types of Databases :-
------------------
 ~ Distributed Database
 ~ Centralization Database
 ~ Relational Database
 ~ Graph Database
 ~ NoSql Database
 ~ Cloud Database

RDBMS (Relational Database Management System):-
-----
 Only known attributes which can be stored in Table (Structured Way of Storing Data). eg., student deatails(id,name,department)

Distributed Database :-
--------------------
 One Database - One Table - Other Database uses 

Centralized Database :-
--------------------
 One Database - Many Table - Other Database uses


 Distributed :   
 ----------- 
                +----------+                          
                | Students |                      Course  
                | +------+ |                     +------+
                | | Name | |                     |   C  |
                | |  Id  | |<--------------------|  C++ |
                | | Phno | |                     | Java |
                | +------+ |                     +------+
                +----------+
                      ^ 
                      |
                      +--+
                         | DEPT
                        +-------+
                        |  CSE  |
                        |  EEE  |
                        |  ECE  |
                        +-------+

 Centralized : 
 -----------                                   
                                     +---------------------------+
                                     |                           |
                  Student            |          Course           |
                 +------+            |         --------          |
                 | Name |            |         |   C  |          | 
                 |  Id  |            |         |  C++ |          | 
                 | Phno |            |         | Java |          |
                 +------+            |         --------          |
                      |              |                           |
                      |              |                           |
                      +------------> |                           |  
                                     |          DEPT             | 
                                     |        +-------+          |
                                     |        |  CSE  |          |
                                     |        |  EEE  |          |
                                     |        |  ECE  |          |
                                     |        +-------+          |
                                     +---------------------------+

Graph Database :-
--------------
 Hierarichal Database -> Parent (many) - (one) Child database ------+
 Network Database -> neighbor (many) - (many) neighbor database ----|---+  
          +---------------------------------------------------------+   |
          |                                                             |
          v                                                             v
  [Top Down Approach]                                                 No SQL
  [Bottom Up Aproach]
         SQL
 
NoSQL :- 
-----
 No Structured

Cloud Database :-
--------------
 Space (buy) - work on DB

Components of a DBMS :-
--------------------
 Configuring authentication and authorization
 Storage Engine
 Query Processor
 Query language
 log manager

 ++=============++========================================================================================++
 || Meta Data   || Information of Information or Data Additional Information (Ip address , author , ....) ||
 ++=============++========================================================================================++
 || Cache       || Temporary application storage                                                          ||
 ++=============++========================================================================================++
 || Cookies     || Cache within the browser                                                               ||  
 ++=============++========================================================================================++ 

Model The Data :-
--------------
 ER :-
 --
  Entity - relationship model _ used in SQL _ can be viewed in pictorial way (rows and column)
 Object Based DB :-
 ---------------
  Unstructured _ OOPS Concept _ automatically detect and vary with respect to properties
 Semi Structured :-
 ---------------
  (Don't Know about the structure of Data) NoSql (mongo DB) (Not Only SQL or Non Relational SQL)
  
ER Model :-
--------
 Entity - Single object or thing
 Attribute - properties of entity
 Relationship - Relationship between entities

     Entity - Rectangle
     Attribute - Oval
     Relationship - Rhombus

 Attribute :-
 ---------
  Key Attribute - name , rollno (unique data)
  Composite Attribute - one atribute have to be a multiple attribute (name - first name , last name)
  Derived Value Attribute - derived by another attribute (age from DOB)
  Multivalued Attribute - more unique attributes (phno 1 , phno 2 or acc 1 , acc 2)

 Entity :-
 ------
  Strong Entity - Strong bond with database (two nested rectangle)
  Weak Entity - Weak bond with database (single rectangle)

 Relationship :-
 ------------
  one to many - scientist invents many invention
  one to one - one student have one roll no
  many to one - many students study single course
  many to many - many functions have many testcases

SQL :-
---
 row - A entity complete data
 column - All data in a particular attribute
 tuple - one row

 Languages in SQL :- 
 ----------------
  +------------+-------------------------------+----------------------------------+
  |   Name     |          Abbrevation          |            Commands              |
  +------------+-------------------------------+----------------------------------+
  |   DDL      |   Data Defination Language    | create , alter , drop , truncate |
  |   DML      |   Data Manipulation Language  | insert , update , delete         |
  |   DCL      |   Data Control Language       | grand , revoke                   |
  |   DTL      |   Data Transaction Language   | commit , rollback , savepoint    |
  |   DQL      |   Data Query Language         | select                           |  
  +------------+-------------------------------+----------------------------------+

Server :-
------
 Recieves a request from a client and response to the request
 Server need powerful computational Hardwares
 For low end servers many servers can be combined together to work efficiently which is called load balancing


Task :-
---- 
 ~ Sort based on age
 ~ count by course
 ~ Joins
 
